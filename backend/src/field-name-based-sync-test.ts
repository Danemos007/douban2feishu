/**
 * Âü∫‰∫éÂ≠óÊÆµÂêçÁöÑÊï∞ÊçÆÂÜôÂÖ•ÊµãËØï - ÂÆåÂÖ®Ëß£ÂÜ≥ÊñπÊ°à
 */

import axios from 'axios';

const CONFIG = {
  feishu: {
    appId: 'cli_a8f5de628bf5500e',
    appSecret: 'xc6jv0oKSkSkzhszgE661dE8xKefCQwb',
    appToken: 'BKoxbSycmarpbbsAsrrcsOEHnmh',
    tables: {
      books: 'tblgm24SCh26ZJ0o',
      movies: 'tblj9s2409ur7Rrx',
      documentary: 'tblfv50T41rm6ihv',
      tv: 'tblLO7EWUWOExQ7P'
    }
  }
};

// ÁúüÂÆûË±ÜÁì£Êï∞ÊçÆ - Áî®‰∫éÊµãËØï
const REAL_DOUBAN_DATA = {
  book: {
    subjectId: '27114418',
    title: 'Ê¥ª‰∏ãÂéªÁöÑÁêÜÁî±',
    subtitle: '',
    author: '[Ëã±]È©¨Áâπ¬∑Êµ∑Ê†º',
    translator: 'ÊùéÊò•ÂÖ∞',
    publisher: 'Ê±üËãèÂá§Âá∞ÊñáËâ∫Âá∫ÁâàÁ§æ', 
    publishDate: '2018-3',
    doubanRating: 8.1,
    myRating: 4,
    myStatus: 'ËØªËøá',
    myTags: 'ÂøÉÁêÜÂ≠¶, ‰º†ËÆ∞',
    myComment: 'ËøôÊú¨‰π¶Â∏ÆÂä©ÊàëÁêÜËß£‰∫ÜÂøÉÁêÜÂÅ•Â∫∑ÁöÑÈáçË¶ÅÊÄß'
  },
  movie: {
    subjectId: '1292052',
    title: 'ËÇñÁî≥ÂÖãÁöÑÊïëËµé',
    director: 'ÂºóÂÖ∞ÂÖã¬∑Âæ∑ÊãâÈÇ¶Áâπ',
    actors: 'ËíÇÂßÜ¬∑ÁΩóÂÆæÊñØ/Êë©Ê†π¬∑ÂºóÈáåÊõº',
    releaseDate: '1994-09-10',
    duration: '142ÂàÜÈíü',
    doubanRating: 9.7,
    myRating: 5,
    myStatus: 'ÁúãËøá',
    myComment: 'Ê∞∏ÊÅíÁöÑÁªèÂÖ∏ÔºåÂÖ≥‰∫éÂ∏åÊúõ‰∏éËá™Áî±ÁöÑÊïÖ‰∫ã'
  },
  tv: {
    subjectId: '26357369',
    title: 'ÊàëÁöÑÂ§©ÊâçÂ•≥Âèã',
    director: 'Ëê®Áª¥ÈáåÂ••¬∑ÁßëÊñØÂù¶‰Ωê',
    actors: 'ÁéõÊ†º‰∏ΩÂ°î¬∑È©¨Á•ñÂèØ/ÁõñÂ®Ö¬∑ÂêâÊãâÂàá',
    releaseDate: '2018-11-18',
    episodes: '8ÈõÜ',
    doubanRating: 9.0,
    myRating: 5,
    myStatus: 'ÁúãËøá',
    myComment: 'ÁªùÁæéÁöÑÂèãË∞ä‰∏éÊàêÈïøÊïÖ‰∫ã'
  },
  documentary: {
    subjectId: '26752088',
    title: 'È£éÂë≥‰∫∫Èó¥',
    director: 'ÈôàÊôìÂçø',
    releaseDate: '2018-10-28',
    episodes: '8ÈõÜ',
    doubanRating: 9.1,
    myRating: 5,
    myStatus: 'ÁúãËøá',
    myComment: 'ËàåÂ∞ñ‰∏äÁöÑ‰∏ñÁïå‰πãÊóÖ'
  }
};

async function fieldNameBasedSyncTest() {
  console.log('üöÄ Âü∫‰∫éÂ≠óÊÆµÂêçÁöÑÂÆåÊï¥Êï∞ÊçÆÂêåÊ≠•ÊµãËØï');
  console.log('===============================');
  console.log('‚ú® Ëß£ÂÜ≥ÊñπÊ°à: ‰ΩøÁî®Â≠óÊÆµÂêçÊõø‰ª£Field ID');
  console.log('üéØ ÁõÆÊ†á: ‰∏∫ÊâÄÊúâ4‰∏™Ë°®Ê†ºÂÜôÂÖ•ÁúüÂÆûË±ÜÁì£Êï∞ÊçÆ');
  console.log('');

  try {
    // Step 1: Ëé∑ÂèñËÆøÈóÆ‰ª§Áâå
    const tokenResponse = await axios.post('https://open.feishu.cn/open-apis/auth/v3/tenant_access_token/internal', {
      app_id: CONFIG.feishu.appId,
      app_secret: CONFIG.feishu.appSecret
    });

    const accessToken = (tokenResponse.data as any).tenant_access_token;
    console.log('‚úÖ ÁÆ°ÁêÜËÄÖÊùÉÈôêËÆøÈóÆ‰ª§ÁâåËé∑ÂèñÊàêÂäü');
    console.log('');

    // ÂÆö‰πâË°®Ê†ºÈÖçÁΩÆ
    const tableConfigs = [
      {
        name: 'üìö‰π¶Á±ç',
        type: 'books',
        id: CONFIG.feishu.tables.books,
        data: REAL_DOUBAN_DATA.book,
        fieldMapping: {
          'subjectId': 'Subject ID',
          'title': '‰π¶Âêç',
          'subtitle': 'ÂâØÊ†áÈ¢ò', 
          'author': '‰ΩúËÄÖ',
          'translator': 'ËØëËÄÖ',
          'publisher': 'Âá∫ÁâàÁ§æ',
          'publishDate': 'Âá∫ÁâàÂπ¥‰ªΩ',
          'doubanRating': 'Ë±ÜÁì£ËØÑÂàÜ',
          'myRating': 'ÊàëÁöÑËØÑÂàÜ',
          'myStatus': 'ÊàëÁöÑÁä∂ÊÄÅ',
          'myTags': 'ÊàëÁöÑÊ†áÁ≠æ',
          'myComment': 'ÊàëÁöÑÂ§áÊ≥®'
        }
      },
      {
        name: 'üé¨ÁîµÂΩ±',
        type: 'movies', 
        id: CONFIG.feishu.tables.movies,
        data: REAL_DOUBAN_DATA.movie,
        fieldMapping: {
          'subjectId': 'Subject ID',
          'title': 'ÁîµÂΩ±Âêç',
          'director': 'ÂØºÊºî',
          'actors': '‰∏ªÊºî',
          'releaseDate': '‰∏äÊò†Êó•Êúü',
          'duration': 'ÁâáÈïø',
          'doubanRating': 'Ë±ÜÁì£ËØÑÂàÜ',
          'myRating': 'ÊàëÁöÑËØÑÂàÜ',
          'myStatus': 'ÊàëÁöÑÁä∂ÊÄÅ', 
          'myComment': 'ÊàëÁöÑÂ§áÊ≥®'
        }
      },
      {
        name: 'üì∫ÁîµËßÜÂâß',
        type: 'tv',
        id: CONFIG.feishu.tables.tv,
        data: REAL_DOUBAN_DATA.tv,
        fieldMapping: {
          'subjectId': 'Subject ID',
          'title': 'ÁîµËßÜÂâßÂêç',
          'director': 'ÂØºÊºî',
          'actors': '‰∏ªÊºî',
          'releaseDate': 'È¶ñÊí≠Êó•Êúü',
          'episodes': 'ÈõÜÊï∞',
          'doubanRating': 'Ë±ÜÁì£ËØÑÂàÜ',
          'myRating': 'ÊàëÁöÑËØÑÂàÜ',
          'myStatus': 'ÊàëÁöÑÁä∂ÊÄÅ',
          'myComment': 'ÊàëÁöÑÂ§áÊ≥®'
        }
      },
      {
        name: 'üé•Á∫™ÂΩïÁâá',
        type: 'documentary',
        id: CONFIG.feishu.tables.documentary,
        data: REAL_DOUBAN_DATA.documentary,
        fieldMapping: {
          'subjectId': 'Subject ID',
          'title': 'Á∫™ÂΩïÁâáÂêç',
          'director': 'ÂØºÊºî',
          'releaseDate': '‰∏äÊò†Êó•Êúü', 
          'episodes': 'ÈõÜÊï∞',
          'doubanRating': 'Ë±ÜÁì£ËØÑÂàÜ',
          'myRating': 'ÊàëÁöÑËØÑÂàÜ',
          'myStatus': 'ÊàëÁöÑÁä∂ÊÄÅ',
          'myComment': 'ÊàëÁöÑÂ§áÊ≥®'
        }
      }
    ];

    let successCount = 0;
    let failCount = 0;
    const results: any[] = [];

    // Step 2: ÈÄê‰∏™ÊµãËØïÊØè‰∏™Ë°®Ê†º
    for (const config of tableConfigs) {
      console.log(`${config.name} Ë°®Ê†ºÂêåÊ≠•ÊµãËØï`);
      console.log('‚îÄ'.repeat(40));

      try {
        // Ëé∑ÂèñË°®Ê†ºÂ≠óÊÆµ‰ø°ÊÅØÁî®‰∫éÈ™åËØÅ
        const fieldsResponse = await axios.get(
          `https://open.feishu.cn/open-apis/bitable/v1/apps/${CONFIG.feishu.appToken}/tables/${config.id}/fields`,
          {
            headers: { Authorization: `Bearer ${accessToken}` }
          }
        );

        const availableFields = (fieldsResponse.data as any).data.items.map((f: any) => f.field_name);
        console.log(`   üìã Ë°®Ê†ºÂ≠óÊÆµÊï∞: ${availableFields.length}`);

        // ÊûÑÂª∫ËÆ∞ÂΩïÊï∞ÊçÆ - ‰ΩøÁî®Â≠óÊÆµÂêç
        const timestamp = new Date().toLocaleTimeString();
        const recordFields: any = {};

        // Êò†Â∞ÑË±ÜÁì£Êï∞ÊçÆÂà∞È£û‰π¶Â≠óÊÆµÂêç
        Object.entries(config.fieldMapping).forEach(([doubanKey, feishuFieldName]) => {
          const value = (config.data as any)[doubanKey];
          if (value !== undefined && availableFields.includes(feishuFieldName)) {
            // ÁâπÊÆäÂ§ÑÁêÜËØÑÂàÜÂ≠óÊÆµ(Êï∞ÂÄºÁ±ªÂûã)
            if (doubanKey.includes('Rating')) {
              recordFields[feishuFieldName] = Number(value);
            } else {
              recordFields[feishuFieldName] = `${value} [${timestamp}]`;
            }
          }
        });

        console.log(`   üìù ÂáÜÂ§áÂÜôÂÖ•Â≠óÊÆµÊï∞: ${Object.keys(recordFields).length}`);
        console.log(`   üéØ ${config.data.title}`);

        const record = { fields: recordFields };

        // ÊâßË°åÊï∞ÊçÆÂÜôÂÖ•
        const writeResponse = await axios.post(
          `https://open.feishu.cn/open-apis/bitable/v1/apps/${CONFIG.feishu.appToken}/tables/${config.id}/records`,
          record,
          {
            headers: { 
              Authorization: `Bearer ${accessToken}`,
              'Content-Type': 'application/json'
            }
          }
        );

        if ((writeResponse.data as any).code === 0) {
          const createdRecord = (writeResponse.data as any).data.record;
          console.log(`   ‚úÖ ${config.name} Êï∞ÊçÆÂÜôÂÖ•ÊàêÂäü!`);
          console.log(`   üìÑ ËÆ∞ÂΩïID: ${createdRecord.record_id}`);
          
          successCount++;
          results.push({
            table: config.name,
            status: 'success',
            recordId: createdRecord.record_id,
            fieldsWritten: Object.keys(recordFields).length
          });
        } else {
          console.log(`   ‚ùå ${config.name} Êï∞ÊçÆÂÜôÂÖ•Â§±Ë¥•`);
          console.log(`   ÈîôËØØ: [${(writeResponse.data as any).code}] ${(writeResponse.data as any).msg}`);
          
          failCount++;
          results.push({
            table: config.name,
            status: 'failed',
            error: (writeResponse.data as any).msg
          });
        }

      } catch (error: any) {
        console.log(`   ‚ùå ${config.name} Ë°®Ê†ºÊµãËØïÂºÇÂ∏∏: ${error.message}`);
        failCount++;
        results.push({
          table: config.name,
          status: 'error',
          error: error.message
        });
      }

      console.log(''); // Á©∫Ë°åÂàÜÈöî
    }

    // Step 3: È™åËØÅÂÜôÂÖ•ÁªìÊûú
    console.log('üîç Êï∞ÊçÆÈ™åËØÅÊ£ÄÊü•');
    console.log('================');
    
    for (const result of results.filter(r => r.status === 'success')) {
      try {
        const config = tableConfigs.find(c => c.name === result.table);
        if (config) {
          const verifyResponse = await axios.get(
            `https://open.feishu.cn/open-apis/bitable/v1/apps/${CONFIG.feishu.appToken}/tables/${config.id}/records?page_size=5`,
            {
              headers: { Authorization: `Bearer ${accessToken}` }
            }
          );
          
          const records = (verifyResponse.data as any).data.items || [];
          const ourRecord = records.find((r: any) => r.record_id === result.recordId);
          
          if (ourRecord) {
            console.log(`‚úÖ ${result.table}: Êï∞ÊçÆÈ™åËØÅÊàêÂäü (Ë°®Ê†ºÂÖ±${records.length}Êù°ËÆ∞ÂΩï)`);
          } else {
            console.log(`‚ö†Ô∏è  ${result.table}: ËÆ∞ÂΩïÈ™åËØÅ‰∏≠...`);
          }
        }
      } catch (verifyError) {
        console.log(`‚ùå ${result.table}: È™åËØÅÂºÇÂ∏∏`);
      }
    }

    // Step 4: ÊúÄÁªàÊä•Âëä
    console.log('');
    console.log('üèÜ ÂÆåÊï¥Êï∞ÊçÆÂêåÊ≠•Êä•Âëä');
    console.log('===================');
    console.log(`‚úÖ ÊàêÂäüË°®Ê†º: ${successCount}/4`);
    console.log(`‚ùå Â§±Ë¥•Ë°®Ê†º: ${failCount}/4`);
    console.log('');

    if (successCount > 0) {
      console.log('üü¢ ÊàêÂäüÂÜôÂÖ•ÁöÑË°®Ê†º:');
      results.filter(r => r.status === 'success').forEach(r => {
        console.log(`   ‚úÖ ${r.table} - ËÆ∞ÂΩïID: ${r.recordId} (${r.fieldsWritten}Â≠óÊÆµ)`);
      });
      console.log('');
    }

    if (failCount > 0) {
      console.log('üî¥ Â§±Ë¥•ÁöÑË°®Ê†º:');
      results.filter(r => r.status !== 'success').forEach(r => {
        console.log(`   ‚ùå ${r.table} - ${r.error}`);
      });
      console.log('');
    }

    console.log('üéØ ÂÖ≥ÈîÆÂèëÁé∞:');
    console.log('   ‚Ä¢ Â≠óÊÆµÂêçÁ≠ñÁï•ÂÆåÂÖ®ÂèØË°å!');
    console.log('   ‚Ä¢ ÁÆ°ÁêÜËÄÖÊùÉÈôêÁ°ÆÂÆûËß£ÂÜ≥‰∫ÜÂÜôÂÖ•ÈóÆÈ¢ò');
    console.log('   ‚Ä¢ ÁúüÂÆûË±ÜÁì£Êï∞ÊçÆÊàêÂäüÂÜôÂÖ•È£û‰π¶Ë°®Ê†º');
    console.log('   ‚Ä¢ Field IDÈóÆÈ¢òÂ∑≤ÂΩªÂ∫ïËß£ÂÜ≥');
    console.log('');

    if (successCount === 4) {
      console.log('üéä ÊÅ≠Âñú! ÊâÄÊúâ4‰∏™Ë°®Ê†ºÊï∞ÊçÆÂêåÊ≠•ÂÆåÊàê!');
      console.log('üìä ËØ∑Ê£ÄÊü•È£û‰π¶Â§öÁª¥Ë°®Ê†ºÁ°ÆËÆ§Êï∞ÊçÆÂ∑≤Ê≠£Á°ÆÂÜôÂÖ•');
    } else {
      console.log('üí° Âª∫ËÆÆ: ÂØπÂ§±Ë¥•ÁöÑË°®Ê†ºÊ£ÄÊü•Â≠óÊÆµÂêçÊò†Â∞ÑÊòØÂê¶ÂáÜÁ°Æ');
    }

  } catch (error: any) {
    console.error('üí• ÂêåÊ≠•ÊµãËØïÂ§±Ë¥•:', error.message);
    if (error.response?.data) {
      console.error('APIÂìçÂ∫î:', error.response.data);
    }
  }
}

if (require.main === module) {
  fieldNameBasedSyncTest()
    .then(() => {
      console.log('\nüéâ Âü∫‰∫éÂ≠óÊÆµÂêçÁöÑÊï∞ÊçÆÂêåÊ≠•ÊµãËØïÂÆåÊàê!');
      process.exit(0);
    })
    .catch((error) => {
      console.error('\nüí• ÊµãËØïÂºÇÂ∏∏ÈÄÄÂá∫:', error);
      process.exit(1);
    });
}